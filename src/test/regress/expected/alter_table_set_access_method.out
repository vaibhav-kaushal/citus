SHOW server_version \gset
SELECT substring(:'server_version', '\d+')::int > 11 AS server_version_above_eleven
\gset
\if :server_version_above_eleven
\else
\q
\endif
CREATE SCHEMA alter_table_set_access_method;
SET search_path TO alter_table_set_access_method;
SET citus.shard_count TO 4;
CREATE TABLE dist_table (a INT, b INT);
SELECT create_distributed_table ('dist_table', 'a');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

INSERT INTO dist_table VALUES (1, 1), (2, 2), (3, 3);
SELECT "Name", "Access Method" FROM public.citus_tables WHERE "Name"::text = 'dist_table' ORDER BY 1;
    Name    | Access Method
---------------------------------------------------------------------
 dist_table | heap
(1 row)

SELECT alter_table_set_access_method('dist_table', 'columnar');
NOTICE:  creating a new table for alter_table_set_access_method.dist_table
NOTICE:  Moving the data of alter_table_set_access_method.dist_table
NOTICE:  Dropping the old alter_table_set_access_method.dist_table
NOTICE:  Renaming the new table to alter_table_set_access_method.dist_table
 alter_table_set_access_method
---------------------------------------------------------------------

(1 row)

SELECT "Name", "Access Method" FROM public.citus_tables WHERE "Name"::text = 'dist_table' ORDER BY 1;
    Name    | Access Method
---------------------------------------------------------------------
 dist_table | columnar
(1 row)

-- test partitions
CREATE TABLE partitioned_table (id INT, a INT) PARTITION BY RANGE (id);
CREATE TABLE partitioned_table_1_5 PARTITION OF partitioned_table FOR VALUES FROM (1) TO (5);
CREATE TABLE partitioned_table_6_10 PARTITION OF partitioned_table FOR VALUES FROM (6) TO (10);
SELECT create_distributed_table('partitioned_table', 'id');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

INSERT INTO partitioned_table VALUES (2, 12), (7, 2);
SELECT logicalrelid::text FROM pg_dist_partition WHERE logicalrelid::regclass::text LIKE 'partitioned\_table%' ORDER BY 1;
      logicalrelid
---------------------------------------------------------------------
 partitioned_table
 partitioned_table_1_5
 partitioned_table_6_10
(3 rows)

SELECT run_command_on_workers($$SELECT COUNT(*) FROM pg_catalog.pg_class WHERE relname LIKE 'partitioned\_table%'$$);
 run_command_on_workers
---------------------------------------------------------------------
 (localhost,57637,t,12)
 (localhost,57638,t,12)
(2 rows)

SELECT inhrelid::regclass::text FROM pg_catalog.pg_inherits WHERE inhparent = 'partitioned_table'::regclass ORDER BY 1;
        inhrelid
---------------------------------------------------------------------
 partitioned_table_1_5
 partitioned_table_6_10
(2 rows)

SELECT "Name"::text, "Access Method" FROM public.citus_tables WHERE "Name"::text LIKE 'partitioned\_table%' ORDER BY 1;
          Name          | Access Method
---------------------------------------------------------------------
 partitioned_table      |
 partitioned_table_1_5  | heap
 partitioned_table_6_10 | heap
(3 rows)

SELECT * FROM partitioned_table ORDER BY 1, 2;
 id | a
---------------------------------------------------------------------
  2 | 12
  7 |  2
(2 rows)

SELECT * FROM partitioned_table_1_5 ORDER BY 1, 2;
 id | a
---------------------------------------------------------------------
  2 | 12
(1 row)

SELECT * FROM partitioned_table_6_10 ORDER BY 1, 2;
 id | a
---------------------------------------------------------------------
  7 | 2
(1 row)

-- test altering the partition's access method
SELECT alter_table_set_access_method('partitioned_table_1_5', 'columnar');
NOTICE:  creating a new table for alter_table_set_access_method.partitioned_table_1_5
NOTICE:  Moving the data of alter_table_set_access_method.partitioned_table_1_5
NOTICE:  Dropping the old alter_table_set_access_method.partitioned_table_1_5
NOTICE:  Renaming the new table to alter_table_set_access_method.partitioned_table_1_5
 alter_table_set_access_method
---------------------------------------------------------------------

(1 row)

SELECT logicalrelid::text FROM pg_dist_partition WHERE logicalrelid::regclass::text LIKE 'partitioned\_table%' ORDER BY 1;
      logicalrelid
---------------------------------------------------------------------
 partitioned_table
 partitioned_table_1_5
 partitioned_table_6_10
(3 rows)

SELECT run_command_on_workers($$SELECT COUNT(*) FROM pg_catalog.pg_class WHERE relname LIKE 'partitioned\_table%'$$);
 run_command_on_workers
---------------------------------------------------------------------
 (localhost,57637,t,12)
 (localhost,57638,t,12)
(2 rows)

SELECT inhrelid::regclass::text FROM pg_catalog.pg_inherits WHERE inhparent = 'partitioned_table'::regclass ORDER BY 1;
        inhrelid
---------------------------------------------------------------------
 partitioned_table_1_5
 partitioned_table_6_10
(2 rows)

SELECT "Name"::text, "Access Method" FROM public.citus_tables WHERE "Name"::text LIKE 'partitioned\_table%' ORDER BY 1;
          Name          | Access Method
---------------------------------------------------------------------
 partitioned_table      |
 partitioned_table_1_5  | columnar
 partitioned_table_6_10 | heap
(3 rows)

SELECT * FROM partitioned_table ORDER BY 1, 2;
 id | a
---------------------------------------------------------------------
  2 | 12
  7 |  2
(2 rows)

SELECT * FROM partitioned_table_1_5 ORDER BY 1, 2;
 id | a
---------------------------------------------------------------------
  2 | 12
(1 row)

SELECT * FROM partitioned_table_6_10 ORDER BY 1, 2;
 id | a
---------------------------------------------------------------------
  7 | 2
(1 row)

DROP SCHEMA alter_table_set_access_method CASCADE;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to table dist_table
drop cascades to table partitioned_table
